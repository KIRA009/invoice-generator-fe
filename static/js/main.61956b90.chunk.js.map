{"version":3,"sources":["components/Customer/styles.module.scss","components/CustomerSelector/styles.module.scss","components/InvoiceBody/styles.module.scss","pages/Invoices/styles.module.scss","components/ItemList/styles.module.scss","components/Customer/index.tsx","reducers/customers.ts","reducers/invoices.ts","utils/invoiceAmount.ts","components/CustomerSelector/index.tsx","components/ItemList/index.tsx","components/InvoiceBody/index.tsx","components/InvoicePage/styles.ts","components/InvoicePage/compose.ts","components/InvoicePage/index.tsx","pages/Invoices/index.tsx","utils/getCustomerDetails.ts","routes/index.tsx","pages/AddInvoice/index.tsx","pages/EditInvoice/index.tsx","pages/AddCustomer/index.tsx","theme.ts","App.tsx","reportWebVitals.ts","store.ts","rootReducer.ts","index.tsx"],"names":["module","exports","States","EmptyCustomer","id","name","address","currency","customers","createSlice","initialState","reducers","addCustomer","state","action","push","payload","editCustomer","customerIndex","forEach","customer","index","getCustomers","isViewing","View","isEditing","Edit","isAdding","Add","CustomerForm","nameRef","currencyRef","addressRef","emailRef","websiteRef","TextInput","required","label","readOnly","ref","Textarea","Customer","notifications","useNotifications","dispatch","useDispatch","useRef","isValid","current","value","Container","size","Text","component","onSubmit","e","preventDefault","cb","newCustomer","email","website","showNotification","message","color","icon","a","Date","getTime","toString","actions","className","classes","form_actions","to","Button","type","variant","findInvoiceIndex","invoiceId","invoiceIndex","invoice","invoices","addInvoice","editInvoice","deleteInvoice","console","log","splice","getInvoices","getInvoiceAmount","items","reduce","b","amount","getInvoiceAmountInString","sum","toLocaleString","style","minimumFractionDigits","maximumFractionDigits","getLongStringCurrency","currencyString","Intl","DisplayNames","of","CustomerSelector","selectedCustomer","setSelectedCustomer","useSelector","Select","placeholder","onChange","data","map","createCustomerLink","ItemList","setItems","useState","total","setTotal","itemDescriptionRef","itemQuantityRef","itemRateRef","itemAmountRef","onRateQuantityChange","valueAsNumber","useEffect","Table","itemListTableBody","addIteminput","ActionIcon","delIcon","onClick","itemDetails","itemDetail","quantity","Number","rate","length","prev","newItems","item","description","removeItem","bottomText","InvoiceBody","numberRef","creationDateRef","dueDateRef","subjectRef","editMode","number","creationDate","dueDate","subject","defaultInvoiceNum","useMemo","maxInvoiceNum","isNaN","Math","max","String","padStart","defaultValue","inputFormat","clearable","_invoice","customerId","Font","register","family","fonts","src","fontWeight","registerHyphenationCallback","word","colorGray","styles","invoice_wrapper","position","background","padding","boxShadow","fontFamily","bold","fontSize","flex","display","flexDirection","justifyContent","alignItems","left","textAlign","right","marginTop","width","bg","backgroundColor","bgr","row","borderBottom","image","height","compose","css","replace","split","undefined","Object","assign","InvoicePage","wordSum","converter","toWords","w","toUpperCase","substring","toLowerCase","join","sumWithSymbol","InvoiceDetails","showDownloadLink","setShowDownloadLink","_deleteInvoice","Box","document","fileName","getDate","day","month","year","comp","Invoices","sortedInvoices","sort","find","getCustomerFromId","routes","url","useParams","getCustomer","Router","route","path","element","theme","fontSizes","xl","App","store","persistor","persistStore","loading","MantineProvider","NotificationsProvider","AppShell","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","createHashHistory","combineReducers","customerReducer","invoiceReducer","middleware","thunkMiddlware","includes","process","logger","createLogger","level","collapsed","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","reducer","preloadedState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61956b90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_actions\":\"styles_form_actions__1VOEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createCustomerLink\":\"styles_createCustomerLink__1WMoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_actions\":\"styles_form_actions__3KVp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"invoice\":\"styles_invoice__3z-PY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addIteminput\":\"styles_addIteminput__tEWjW\",\"itemListTableBody\":\"styles_itemListTableBody__2dwp8\",\"description\":\"styles_description__3TZwg\",\"amount\":\"styles_amount__1Q6t0\",\"delIcon\":\"styles_delIcon__fe6PV\",\"bottomText\":\"styles_bottomText__oNBun\"};","import { FormEvent, RefObject, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addCustomer, editCustomer } from '../../reducers/customers';\nimport { Customer as CustomerType } from '../../types/customer';\nimport classes from './styles.module.scss';\nimport { TextInput, Textarea, Button, Container, Text } from '@mantine/core';\nimport { Link } from 'react-router-dom';\nimport { useNotifications } from '@mantine/notifications';\nimport { CheckCircledIcon } from '@modulz/radix-icons';\n\nexport enum States {\n    View = 0,\n    Edit = 1,\n    Add = 2,\n}\n\ninterface Props {\n    state: States;\n}\n\ninterface FormProps extends Props {\n    nameRef?: RefObject<HTMLInputElement>;\n    currencyRef?: RefObject<HTMLInputElement>;\n    addressRef?: RefObject<HTMLTextAreaElement>;\n    emailRef?: RefObject<HTMLInputElement>;\n    websiteRef?: RefObject<HTMLInputElement>;\n}\n\nconst isViewing = (state: States) => state === States.View;\nconst isEditing = (state: States) => state === States.Edit;\nconst isAdding = (state: States) => state === States.Add;\n\nconst CustomerForm = ({\n    state,\n    nameRef,\n    currencyRef,\n    addressRef,\n    emailRef,\n    websiteRef,\n}: FormProps) => {\n    return (\n        <>\n            <TextInput\n                required\n                label='Name'\n                readOnly={!(isAdding(state) || isEditing(state))}\n                ref={nameRef}\n            />\n            <TextInput\n                required\n                label='Currency'\n                readOnly={!(isAdding(state) || isEditing(state))}\n                ref={currencyRef}\n            />\n            <Textarea\n                required\n                label='Address'\n                readOnly={!(isAdding(state) || isEditing(state))}\n                ref={addressRef}\n            />\n            <TextInput\n                label='Email'\n                readOnly={!(isAdding(state) || isEditing(state))}\n                ref={emailRef}\n            />\n            <TextInput\n                label='Website'\n                readOnly={!(isAdding(state) || isEditing(state))}\n                ref={websiteRef}\n            />\n        </>\n    );\n};\n\nconst Customer = ({ state }: Props) => {\n    const notifications = useNotifications();\n    const dispatch = useDispatch();\n    const nameRef = useRef<HTMLInputElement>(null);\n    const currencyRef = useRef<HTMLInputElement>(null);\n    const addressRef = useRef<HTMLTextAreaElement>(null);\n    const emailRef = useRef<HTMLInputElement>(null);\n    const websiteRef = useRef<HTMLInputElement>(null);\n    const isValid = (): boolean => {\n        if (\n            !nameRef.current ||\n            !currencyRef.current ||\n            !addressRef.current ||\n            !emailRef.current ||\n            !websiteRef.current\n        )\n            return false;\n        if (\n            !nameRef.current.value ||\n            !currencyRef.current.value ||\n            !addressRef.current.value\n        )\n            return false;\n        return true;\n    };\n    const _addCustomer = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (!isValid()) return;\n        const newCustomer: CustomerType = {\n            id: '',\n            name: nameRef.current!.value,\n            address: addressRef.current!.value,\n            currency: currencyRef.current!.value,\n        };\n        if (emailRef.current!.value)\n            newCustomer.email = emailRef.current!.value;\n        if (websiteRef.current!.value)\n            newCustomer.website = websiteRef.current!.value;\n\n        dispatch(\n            addCustomer(newCustomer, () => {\n                notifications.showNotification({\n                    message: 'New customer added',\n                    color: 'green',\n                    icon: <CheckCircledIcon />,\n                });\n            })\n        );\n    };\n    const _editCustomer = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (!isValid()) return;\n        const newCustomer: CustomerType = {\n            id: '', // TODO: get this from somewhere\n            name: nameRef.current!.value,\n            address: addressRef.current!.value,\n            currency: currencyRef.current!.value,\n        };\n        if (emailRef.current!.value)\n            newCustomer.email = emailRef.current!.value;\n        if (websiteRef.current!.value)\n            newCustomer.website = websiteRef.current!.value;\n        dispatch(editCustomer(newCustomer));\n    };\n\n    return (\n        <Container size='xs'>\n            <Text component='h1' size='xl'>\n                {isViewing(state)\n                    ? `VIEW CUSTOMER DETAILS`\n                    : isEditing(state)\n                    ? `EDIT CUSTOMER DETAILS`\n                    : `ADD NEW CUSTOMER`}\n            </Text>\n            {isViewing(state) ? (\n                <CustomerForm state={state} />\n            ) : (\n                <form onSubmit={isAdding(state) ? _addCustomer : _editCustomer}>\n                    <CustomerForm\n                        {...{\n                            state,\n                            nameRef,\n                            currencyRef,\n                            addressRef,\n                            emailRef,\n                            websiteRef,\n                        }}\n                    />\n                    <div className={classes.form_actions}>\n                        <Link to='/invoice/add/'>\n                            <Text>Create an invoice</Text>\n                        </Link>\n                        <Button type='submit' variant='filled'>\n                            {isAdding(state) ? `Add` : `Save changes`}\n                        </Button>\n                    </div>\n                </form>\n            )}\n        </Container>\n    );\n};\n\nexport { Customer };\n","import { CaseReducer, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../store';\nimport { Customer } from '../types/customer';\n\ntype initialState = Customer[];\n\nexport const EmptyCustomer: Customer = {\n    id: '',\n    name: '',\n    address: '',\n    currency: '',\n};\n\nconst getReducers = () => {\n    const addCustomer: CaseReducer<initialState, PayloadAction<Customer>> = (\n        state,\n        action\n    ) => {\n        state.push(action.payload);\n    };\n    const editCustomer: CaseReducer<initialState, PayloadAction<Customer>> = (\n        state,\n        action\n    ) => {\n        let customerIndex = -1;\n        state.forEach((customer, index) => {\n            if (customerIndex !== -1) return;\n            if (customer.id === action.payload.id) customerIndex = index;\n        });\n        if (customerIndex !== -1) {\n            state[customerIndex] = {\n                ...action.payload,\n                id: state[customerIndex].id,\n            };\n        }\n    };\n    return {\n        addCustomer,\n        editCustomer,\n    };\n};\n\nconst customers = createSlice({\n    name: 'customers',\n    initialState: [] as initialState,\n    reducers: getReducers(),\n});\n\nexport default customers.reducer;\n\nexport const addCustomer =\n    (payload: Customer, cb: () => void): AppThunk =>\n    async (dispatch) => {\n        const id = new Date().getTime().toString();\n        dispatch(\n            customers.actions.addCustomer({\n                ...payload,\n                id,\n            })\n        );\n        cb();\n    };\n\nexport const editCustomer =\n    (payload: Customer): AppThunk =>\n    (dispatch) => {\n        dispatch(\n            customers.actions.editCustomer({\n                ...payload,\n            })\n        );\n    };\n\nexport const getCustomers = (state: RootState): Customer[] => state.customers;\nexport const getCustomer =\n    (id: string) =>\n    (state: RootState): Customer => {\n        const customer = state.customers.find((customer) => customer.id === id);\n        return (\n            customer || {\n                id: '',\n                name: '',\n                address: '',\n                currency: '',\n            }\n        );\n    };\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../store';\nimport { Invoice } from '../types/invoice';\n\ntype initialState = Invoice[];\n\nconst findInvoiceIndex = (state: initialState, invoiceId: string): number => {\n    let invoiceIndex = -1;\n    state.forEach((invoice, index) => {\n        if (invoiceIndex !== -1) return;\n        if (invoice.id === invoiceId) invoiceIndex = index;\n    });\n    return invoiceIndex;\n};\n\nconst invoices = createSlice({\n    name: 'invoices',\n    initialState: [] as initialState,\n    reducers: {\n        addInvoice: (state: initialState, action: PayloadAction<Invoice>) => {\n            state.push(action.payload);\n        },\n        editInvoice: (state: initialState, action: PayloadAction<Invoice>) => {\n            const invoiceIndex = findInvoiceIndex(state, action.payload.id);\n            if (invoiceIndex !== -1) {\n                state[invoiceIndex] = {\n                    ...action.payload,\n                    id: state[invoiceIndex].id,\n                };\n            }\n        },\n        deleteInvoice: (state: initialState, action: PayloadAction<string>) => {\n            const invoiceIndex = findInvoiceIndex(state, action.payload);\n            console.log(invoiceIndex);\n\n            if (invoiceIndex !== -1) {\n                state.splice(invoiceIndex, 1);\n            }\n        },\n    },\n});\n\nexport default invoices.reducer;\n\nexport const addInvoice =\n    (payload: Invoice, cb: () => void): AppThunk =>\n    async (dispatch) => {\n        const id = new Date().getTime().toString();\n        dispatch(\n            invoices.actions.addInvoice({\n                ...payload,\n                id,\n            })\n        );\n        cb();\n    };\n\nexport const editInvoice =\n    (payload: Invoice, cb: () => void): AppThunk =>\n    async (dispatch) => {\n        dispatch(invoices.actions.editInvoice(payload));\n        cb();\n    };\n\nexport const deleteInvoice =\n    (payload: string, cb: () => void): AppThunk =>\n    async (dispatch) => {\n        dispatch(invoices.actions.deleteInvoice(payload));\n        cb();\n    };\n\nexport const getInvoices = (state: RootState): Invoice[] => state.invoices;\nexport const getInvoice =\n    (invoiceId: string) =>\n    (state: RootState): Invoice | undefined => {\n        return state.invoices.find((invoice) => invoiceId === invoice.id);\n    };\n","import { Customer } from '../types/customer';\nimport { Invoice } from '../types/invoice';\n\nexport const getInvoiceAmount = (invoice: Invoice): number => {\n    return invoice.items.reduce((a, b) => a + b.amount, 0);\n};\n\nexport const getInvoiceAmountInString = (\n    sum: number,\n    customer: Customer\n): string => {\n    return sum.toLocaleString('en-US', {\n        style: 'currency',\n        currency: customer.currency,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2,\n    });\n};\n\nexport const getLongStringCurrency = (customer: Customer): string => {\n    const currencyString = new Intl.DisplayNames(['en'], {\n        type: 'currency',\n    }).of(customer.currency);\n    if (!currencyString) return '';\n    return currencyString;\n};\n","import { useSelector } from 'react-redux';\nimport { getCustomers } from '../../reducers/customers';\nimport { Customer } from '../../types/customer';\nimport { Select, Text } from '@mantine/core';\nimport { Link } from 'react-router-dom';\nimport classes from './styles.module.scss';\nimport { getLongStringCurrency } from '../../utils/invoiceAmount';\n\ninterface Props {\n    selectedCustomer: string;\n    setSelectedCustomer: (newStr: string) => void;\n}\n\nexport const CustomerSelector = ({\n    selectedCustomer,\n    setSelectedCustomer,\n}: Props) => {\n    const customers: Customer[] = useSelector(getCustomers);\n\n    return (\n        <div>\n            <Select\n                label='Select customer'\n                placeholder='Pick one'\n                required\n                value={selectedCustomer}\n                onChange={setSelectedCustomer}\n                data={customers.map((customer) => ({\n                    value: customer.id,\n                    label:\n                        customer.name + ' - ' + getLongStringCurrency(customer),\n                }))}\n            />\n            <Link to='/customer/add/'>\n                <Text className={classes.createCustomerLink}>\n                    Create a customer\n                </Text>\n            </Link>\n        </div>\n    );\n};\n","import React, {\n    ChangeEvent,\n    MouseEvent,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport { InvoiceItem } from '../../types/invoice-item';\nimport { Table, TextInput, Text, ActionIcon } from '@mantine/core';\nimport classes from './styles.module.scss';\nimport { TrashIcon, PlusCircledIcon } from '@modulz/radix-icons';\nimport { useNotifications } from '@mantine/notifications';\n\ninterface Props {\n    items: InvoiceItem[];\n    setItems: React.Dispatch<React.SetStateAction<InvoiceItem[]>>;\n}\n\nexport const ItemList = ({ items, setItems }: Props) => {\n    const notifications = useNotifications();\n    const [total, setTotal] = useState(0 as number);\n    const itemDescriptionRef = useRef<HTMLInputElement>(null);\n    const itemQuantityRef = useRef<HTMLInputElement>(null);\n    const itemRateRef = useRef<HTMLInputElement>(null);\n    const itemAmountRef = useRef<HTMLInputElement>(null);\n\n    const addItem = (e: MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        if (\n            !itemDescriptionRef.current ||\n            !itemQuantityRef.current ||\n            !itemRateRef.current\n        )\n            return;\n        const itemDetails: InvoiceItem = {\n            itemDetail: itemDescriptionRef.current.value,\n            quantity: Number(itemQuantityRef.current.value),\n            rate: Number(itemRateRef.current.value),\n            amount: 0,\n        };\n        itemDetails.amount = itemDetails.rate * itemDetails.quantity;\n        if (itemDetails.amount === 0 || itemDetails.itemDetail.length === 0) {\n            notifications.showNotification({\n                message: 'Please ensure amount and detail are valid',\n                color: 'red',\n            });\n            return;\n        }\n        itemDescriptionRef.current.value = '';\n        itemQuantityRef.current.value = '';\n        itemRateRef.current.value = '';\n        if (itemAmountRef.current) itemAmountRef.current.value = '';\n\n        setItems((prev) => {\n            let newItems = [...prev];\n            newItems.push(itemDetails);\n            return newItems;\n        });\n    };\n    const removeItem = (e: MouseEvent<HTMLButtonElement>, index: number) => {\n        setItems((prev) => {\n            let newItems = [...prev];\n            newItems.splice(index, 1);\n            return newItems;\n        });\n    };\n    const onRateQuantityChange = (e: ChangeEvent<HTMLInputElement>) => {\n        if (\n            !itemQuantityRef.current ||\n            !itemRateRef.current ||\n            !itemAmountRef.current\n        )\n            return;\n        itemAmountRef.current.value = `${\n            itemQuantityRef.current.valueAsNumber *\n            itemRateRef.current.valueAsNumber\n        }`;\n    };\n\n    useEffect(() => {\n        setTotal(items.reduce((a, b) => a + b.amount, 0));\n    }, [items]);\n    return (\n        <div>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>Item description</th>\n                        <th>Quantity</th>\n                        <th>Rate</th>\n                        <th>Amount</th>\n                    </tr>\n                </thead>\n                <tbody className={classes.itemListTableBody}>\n                    <tr>\n                        <td>\n                            <TextInput\n                                className={classes.addIteminput}\n                                ref={itemDescriptionRef}\n                            />\n                        </td>\n                        <td>\n                            <TextInput\n                                onChange={onRateQuantityChange}\n                                className={classes.addIteminput}\n                                type='number'\n                                ref={itemQuantityRef}\n                            />\n                        </td>\n                        <td>\n                            <TextInput\n                                onChange={onRateQuantityChange}\n                                className={classes.addIteminput}\n                                type='number'\n                                ref={itemRateRef}\n                            />\n                        </td>\n                        <td className={classes.amount}>\n                            <TextInput\n                                className={classes.addIteminput}\n                                type='number'\n                                readOnly\n                                ref={itemAmountRef}\n                            />\n                            <ActionIcon\n                                className={classes.delIcon}\n                                color='blue'\n                                variant='filled'\n                                onClick={addItem}\n                            >\n                                <PlusCircledIcon />\n                            </ActionIcon>\n                        </td>\n                    </tr>\n                    {items.map((item, index) => (\n                        <tr key={index}>\n                            <td className={classes.description}>\n                                {item.itemDetail}\n                            </td>\n                            <td>{item.quantity}</td>\n                            <td>{item.rate}</td>\n                            <td className={classes.amount}>\n                                {item.amount}{' '}\n                                <ActionIcon\n                                    className={classes.delIcon}\n                                    color='red'\n                                    variant='filled'\n                                    onClick={(\n                                        e: MouseEvent<HTMLButtonElement>\n                                    ) => removeItem(e, index)}\n                                >\n                                    <TrashIcon />\n                                </ActionIcon>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n            <Text className={classes.bottomText}>Subtotal: {total}</Text>\n            <Text className={classes.bottomText}>Total: {total}</Text>\n        </div>\n    );\n};\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addInvoice, editInvoice, getInvoices } from '../../reducers/invoices';\nimport { InvoiceItem } from '../../types/invoice-item';\nimport { CustomerSelector } from '../CustomerSelector';\nimport { ItemList } from '../ItemList';\nimport { Invoice } from '../../types/invoice';\nimport { TextInput, Button, Text } from '@mantine/core';\nimport { DatePicker } from '@mantine/dates';\nimport { useNotifications } from '@mantine/notifications';\nimport { CrossCircledIcon, CheckCircledIcon } from '@modulz/radix-icons';\nimport { Link } from 'react-router-dom';\nimport classes from './styles.module.scss';\nimport { Customer } from '../../types/customer';\n\ninterface Props {\n    invoice?: Invoice;\n    customer?: Customer;\n}\n\nexport const InvoiceBody = ({ invoice, customer }: Props) => {\n    const notifications = useNotifications();\n    const [selectedCustomer, setSelectedCustomer] = useState<string>(\n        customer ? customer.id : ''\n    );\n    const [items, setItems] = useState<InvoiceItem[]>(\n        invoice ? invoice.items : []\n    );\n    const invoices = useSelector(getInvoices);\n    const dispatch = useDispatch();\n    const numberRef = useRef<HTMLInputElement>(null);\n    const creationDateRef = useRef<HTMLButtonElement>(null);\n    const dueDateRef = useRef<HTMLButtonElement>(null);\n    const subjectRef = useRef<HTMLInputElement>(null);\n    const editMode = invoice ? true : false;\n\n    useEffect(() => {\n        if (invoice) {\n            if (numberRef.current) numberRef.current.value = invoice.number;\n            if (creationDateRef.current)\n                creationDateRef.current.value = invoice.creationDate;\n            if (dueDateRef.current && invoice.dueDate)\n                dueDateRef.current.value = invoice.dueDate;\n            if (subjectRef.current) subjectRef.current.value = invoice.subject;\n        }\n    }, [invoice]);\n\n    const save = (e: React.MouseEvent) => {\n        e.preventDefault();\n        if (\n            !numberRef.current ||\n            !creationDateRef.current ||\n            !dueDateRef.current ||\n            !subjectRef.current\n        )\n            return;\n        if (\n            !creationDateRef.current.value ||\n            !numberRef.current.value ||\n            !subjectRef.current.value\n        ) {\n            notifications.showNotification({\n                message: 'Please fill all required values',\n                color: 'red',\n                icon: <CrossCircledIcon />,\n            });\n            return;\n        }\n\n        const _invoice: Invoice = {\n            id: '',\n            items,\n            customerId: selectedCustomer,\n            creationDate: creationDateRef.current.value,\n            number: numberRef.current.value,\n            subject: subjectRef.current.value,\n        };\n\n        if (dueDateRef.current.value) {\n            _invoice.dueDate = dueDateRef.current.value;\n        }\n\n        if (editMode) {\n            dispatch(\n                editInvoice(_invoice, () => {\n                    notifications.showNotification({\n                        message: 'Invoice edited successfully',\n                        color: 'green',\n                        icon: <CheckCircledIcon />,\n                    });\n                })\n            );\n        } else {\n            dispatch(\n                addInvoice(_invoice, () => {\n                    notifications.showNotification({\n                        message: 'New invoice added',\n                        color: 'green',\n                        icon: <CheckCircledIcon />,\n                    });\n                })\n            );\n        }\n    };\n    const defaultInvoiceNum = useMemo(() => {\n        let maxInvoiceNum = 0;\n        for (const invoice of invoices) {\n            if (!isNaN(Number(invoice.number))) {\n                maxInvoiceNum = Math.max(maxInvoiceNum, Number(invoice.number));\n            }\n        }\n        const newInvoiceNum = maxInvoiceNum + 1;\n        return String(newInvoiceNum).padStart(6, '0');\n    }, [invoices]);\n\n    return (\n        <>\n            <CustomerSelector {...{ selectedCustomer, setSelectedCustomer }} />\n            <TextInput\n                required\n                label='Invoice Number'\n                ref={numberRef}\n                defaultValue={defaultInvoiceNum}\n            />\n            <DatePicker\n                inputFormat='DD/MM/YYYY'\n                ref={creationDateRef}\n                label='Invoice date'\n                required\n                defaultValue={new Date()}\n                clearable={false}\n            />\n            <DatePicker\n                inputFormat='DD/MM/YYYY'\n                ref={dueDateRef}\n                label='Invoice due date'\n            />\n            <TextInput required label='Subject' ref={subjectRef} />\n            <ItemList items={items} setItems={setItems} />\n            <div className={classes.form_actions}>\n                <Link to='/invoices'>\n                    <Text>View your invoices</Text>\n                </Link>\n                <Button type='submit' variant='filled' onClick={save}>\n                    {editMode ? 'Edit invoice' : 'Add Invoice'}\n                </Button>\n            </div>\n        </>\n    );\n};\n","import { CSSClasses } from '../../types/cssClasses'\nimport { Font } from '@react-pdf/renderer'\n\nFont.register({\n    family: 'Nunito',\n    fonts: [\n        { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf' },\n        { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf', fontWeight: 600 },\n    ],\n})\nFont.registerHyphenationCallback(word => (\n    [word]\n));\n\nconst colorGray = '#666'\nconst colorLightGray = '#e3e3e3'\n\nconst styles: CSSClasses = {\n    invoice_wrapper: {\n        position: 'relative',\n        background: '#fff',\n        padding: '40px',\n        boxShadow: '0 0 17px 0 rgba(16, 40, 73, 0.09)',\n        fontFamily: 'Nunito',\n    },\n    bold: {\n        fontWeight: 'bold',\n    },\n    'fs-small': {\n        fontSize: '10px',\n    },\n    'fs-medium': {\n        fontSize: '20px',\n    },\n    'fs-large': {\n        fontSize: '30px',\n    },\n    flex: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'flex-start'\n    },\n    'align-center': {\n        alignItems: 'center'\n    },\n    left: {\n        textAlign: 'left',\n    },\n    right: {\n        textAlign: 'right',\n    },\n    'mt-small': {\n        marginTop: '10px'\n    },\n    'mt-med': {\n        marginTop: '15px'\n    },\n    'mt-large': {\n        marginTop: '20px'\n    },\n    35: {\n        width: '35%',\n    },\n    50: {\n        width: '50%',\n    },\n    bg: {\n        backgroundColor: \"red\"\n    },\n    bgr: {\n        backgroundColor: \"green\"\n    },\n    'bg-gray': {\n        backgroundColor: colorGray,\n        color: 'white'\n    },\n    'bg-light-gray': {\n        backgroundColor: colorLightGray,\n    },\n    row: {\n        borderBottom: `1px solid ${colorGray}`,\n    },\n    'w-8': {\n        width: '8%',\n    },\n    'w-17': {\n        width: '17%',\n    },\n    'w-18': {\n        width: '18%',\n    },\n    'w-26': {\n        width: '26%',\n    },\n    'w-35': {\n        width: '35%',\n    },\n    'w-48': {\n        width: '48%',\n    },\n    'p-4-8': {\n        padding: '4px 8px',\n    },\n    'fl-small': {\n        flex: 1\n    },\n    'fl-med': {\n        flex: 2\n    },\n    'fl-large': {\n        flex: 6\n    },\n    image: {\n        position: 'relative',\n        display: 'block',\n        height: '50px'\n    },\n}\n\nexport default styles\n","import ReactPDF from '@react-pdf/renderer'\nimport styles from './styles'\n\nconst compose = (classes: string): ReactPDF.Styles => {\n    const css: ReactPDF.Styles = {}\n\n    const classesArray: string[] = classes.replace(/\\s+/g, ' ').split(' ')\n\n    classesArray.forEach((className) => {\n        if (typeof styles[className] !== undefined) {\n            Object.assign(css, styles[className])\n        }\n    })\n\n    return css\n}\n\nexport default compose\n","import { Document, Page, View, Text, Image } from '@react-pdf/renderer';\nimport compose from './compose';\nimport { Invoice } from '../../types/invoice';\nimport converter from 'number-to-words';\nimport { Customer } from '../../types/customer';\nimport {\n    getInvoiceAmount,\n    getInvoiceAmountInString,\n    getLongStringCurrency,\n} from '../../utils/invoiceAmount';\n\ninterface Props {\n    invoice: Invoice;\n    customer: Customer;\n}\n\nexport const InvoicePage = ({ invoice, customer }: Props) => {\n    const sum = getInvoiceAmount(invoice);\n    const wordSum = converter\n        .toWords(sum)\n        .split(' ')\n        .map((w) => w[0].toUpperCase() + w.substring(1).toLowerCase())\n        .join(' ');\n    const sumWithSymbol = getInvoiceAmountInString(sum, customer);\n    const currencyString = getLongStringCurrency(customer);\n    return (\n        <Document>\n            <Page style={compose('invoice_wrapper')}>\n                <View style={compose('flex')}>\n                    <View style={compose('50')}>\n                        <Text style={compose('bold fs-medium')}>\n                            Shohan Dutta Roy\n                        </Text>\n                        <Text style={compose('fs-small')}>Assam</Text>\n                        <Text style={compose('fs-small')}>India</Text>\n                    </View>\n                    <View style={compose('50')}>\n                        <Text style={compose('fs-large right bold')}>\n                            TAX INVOICE\n                        </Text>\n                        <Text style={compose('fs-small right bold')}>\n                            # INV - {invoice.number}\n                        </Text>\n                    </View>\n                </View>\n                <View style={compose('flex align-center mt-large')}>\n                    <View style={compose('50')}>\n                        <Text style={compose('fs-small')}>Bill To:</Text>\n                        <Text style={compose('fs-small bold mt-small')}>\n                            {customer.name}\n                        </Text>\n                        <Text style={compose('fs-small')}>\n                            {customer.address}\n                        </Text>\n                    </View>\n                    <View style={compose('flex 35 right')}>\n                        <Text style={compose('fs-small bold')}>\n                            Invoice Date:{' '}\n                        </Text>\n                        <Text style={compose('fs-small bold')}>\n                            {invoice.creationDate}\n                        </Text>\n                    </View>\n                </View>\n                <View style={compose('mt-large')}>\n                    <Text style={compose('fs-small')}>Subject:</Text>\n                    <Text style={compose('fs-small bold mt-small')}>\n                        {invoice.subject}\n                    </Text>\n                </View>\n                <View style={compose('mt-large')}>\n                    <View style={compose('row flex bg-gray')}>\n                        <Text style={compose('fs-small w-8 p-4-8 fl-small')}>\n                            #\n                        </Text>\n                        <Text\n                            style={compose('fs-small w-40 p-4-8 left fl-large')}\n                        >\n                            Item & Description\n                        </Text>\n                        <Text\n                            style={compose('fs-small w-17 p-4-8 right fl-med')}\n                        >\n                            Hours\n                        </Text>\n                        <Text\n                            style={compose('fs-small w-17 p-4-8 right fl-med')}\n                        >\n                            Rate\n                        </Text>\n                        <Text\n                            style={compose('fs-small w-18 p-4-8 right fl-med')}\n                        >\n                            Amount\n                        </Text>\n                    </View>\n                    {invoice.items.map((item, index) => (\n                        <View style={compose('row flex')} key={index}>\n                            <Text\n                                style={compose('fs-small w-8 p-4-8 fl-small')}\n                            >\n                                {index + 1}\n                            </Text>\n                            <Text\n                                style={compose(\n                                    'fs-small w-40 p-4-8 left fl-large'\n                                )}\n                            >\n                                {item.itemDetail}\n                            </Text>\n                            <Text\n                                style={compose(\n                                    'fs-small w-17 p-4-8 right fl-med'\n                                )}\n                            >\n                                {item.quantity}\n                            </Text>\n                            <Text\n                                style={compose(\n                                    'fs-small w-17 p-4-8 right fl-med'\n                                )}\n                            >\n                                {item.rate}\n                            </Text>\n                            <Text\n                                style={compose(\n                                    'fs-small w-18 p-4-8 right fl-med'\n                                )}\n                            >\n                                {item.amount}\n                            </Text>\n                        </View>\n                    ))}\n                </View>\n                <View style={compose('mt-small flex')}>\n                    <Text style={compose('fs-small w-48 p-4-8')}></Text>\n                    <Text style={compose('fs-small w-26 p-4-8 right')}>\n                        Sub Total\n                    </Text>\n                    <Text style={compose('fs-small w-26 p-4-8 right')}>\n                        {sumWithSymbol}\n                    </Text>\n                </View>\n                <View style={compose('mt-small flex')}>\n                    <Text style={compose('fs-small w-48 p-4-8')}></Text>\n                    <Text\n                        style={compose(\n                            'fs-small w-26 p-4-8 right bold bg-light-gray'\n                        )}\n                    >\n                        Total\n                    </Text>\n                    <Text\n                        style={compose(\n                            'fs-small w-26 p-4-8 right bold bg-light-gray'\n                        )}\n                    >\n                        {sumWithSymbol}\n                    </Text>\n                </View>\n                <View style={compose('mt-small flex')}>\n                    <Text style={compose('fs-small w-48 p-4-8')}></Text>\n                    <Text style={compose('fs-small w-26 p-4-8 right')}>\n                        Total in Words:\n                    </Text>\n                    <Text style={compose('fs-small w-26 p-4-8 right bold')}>\n                        {wordSum} {currencyString}\n                    </Text>\n                </View>\n                <View style={compose('mt-large')}>\n                    <Image\n                        src='https://iamkira99-personal.s3.ap-south-1.amazonaws.com/my_sig-removebg-preview.png'\n                        style={compose('image w-35')}\n                    />\n                    <Text style={compose('mt-small fs-small')}>\n                        Shohan Dutta Roy\n                    </Text>\n                    <Text style={compose('fs-small')}>\n                        Authorized Signature\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n};\n","import { PDFDownloadLink } from '@react-pdf/renderer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InvoicePage } from '../../components/InvoicePage';\nimport { getCustomers } from '../../reducers/customers';\nimport { deleteInvoice, getInvoices } from '../../reducers/invoices';\nimport { Invoice } from '../../types/invoice';\nimport { Box, Container, Text } from '@mantine/core';\nimport { CheckCircledIcon } from '@modulz/radix-icons';\nimport { Link } from 'react-router-dom';\nimport classes from './styles.module.scss';\nimport {\n    getInvoiceAmount,\n    getInvoiceAmountInString,\n} from '../../utils/invoiceAmount';\nimport { Dispatch, MouseEvent, useState } from 'react';\nimport { useNotifications } from '@mantine/notifications';\nimport { NotificationsContextProps } from '@mantine/notifications/lib/types';\nimport { Customer } from '../../types/customer';\nimport { getCustomerFromId } from '../../utils/getCustomerDetails';\n\nconst InvoiceDetails = (\n    invoice: Invoice,\n    customer: Customer,\n    notifications: NotificationsContextProps,\n    dispatch: Dispatch<any>\n) => {\n    const [showDownloadLink, setShowDownloadLink] = useState(false);\n    const sumWithSymbol = getInvoiceAmountInString(\n        getInvoiceAmount(invoice),\n        customer\n    );\n    const _deleteInvoice = (\n        e: MouseEvent<HTMLAnchorElement>,\n        invoiceId: string\n    ) => {\n        e.preventDefault();\n\n        dispatch(\n            deleteInvoice(invoiceId, () => {\n                notifications.showNotification({\n                    message: 'Invoice deleted successfully',\n                    color: 'green',\n                    icon: <CheckCircledIcon />,\n                });\n            })\n        );\n    };\n    return (\n        <Box key={invoice.id} className={classes.invoice}>\n            <Text component='span'>\n                INV - {invoice.number} for {sumWithSymbol}\n            </Text>\n            <Text component='span'>\n                <Link to={`/invoice/edit/${invoice.id}`}>\n                    <Text>Edit invoice</Text>\n                </Link>\n                {showDownloadLink ? (\n                    <PDFDownloadLink\n                        document={\n                            <InvoicePage\n                                invoice={invoice}\n                                customer={customer}\n                            />\n                        }\n                        fileName={`INV - ${invoice.number}`}\n                        aria-label='Save PDF'\n                    >\n                        Download\n                    </PDFDownloadLink>\n                ) : (\n                    <Link to='#' onClick={(e) => setShowDownloadLink(true)}>\n                        <Text>Show download link</Text>\n                    </Link>\n                )}\n                <Link to='#' onClick={(e) => _deleteInvoice(e, invoice.id)}>\n                    <Text>Delete invoice</Text>\n                </Link>\n            </Text>\n        </Box>\n    );\n};\n\nconst getDate = (invoice: Invoice) => {\n    const [day, month, year] = invoice.creationDate.split('/');\n    return new Date(month + '/' + day + '/' + year);\n};\n\nconst comp = (a: Invoice, b: Invoice) => {\n    return getDate(b).getTime() - getDate(a).getTime();\n};\n\nexport const Invoices = () => {\n    const invoices: Invoice[] = useSelector(getInvoices);\n    const sortedInvoices = [...invoices].sort(comp);\n    const notifications = useNotifications();\n    const dispatch = useDispatch();\n    const customers = useSelector(getCustomers);\n    return (\n        <Container size='xs'>\n            <Text component='h1' size='xl'>\n                INVOICES\n                <Link to='/invoice/add/'>\n                    <Text>Create an invoice</Text>\n                </Link>\n            </Text>\n            {sortedInvoices.map((invoice) =>\n                InvoiceDetails(\n                    invoice,\n                    getCustomerFromId(customers, invoice.customerId),\n                    notifications,\n                    dispatch\n                )\n            )}\n        </Container>\n    );\n};\n","import { EmptyCustomer } from '../reducers/customers';\nimport { Customer } from '../types/customer';\n\nexport const getCustomerFromId = (\n    customers: Customer[],\n    customerId: string\n): Customer => {\n    const customer = customers.find((customer) => customer.id === customerId);\n    if (customer) return customer;\n    return EmptyCustomer;\n};\n","import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { AddCustomer } from '../pages/AddCustomer';\nimport { AddInvoice } from '../pages/AddInvoice';\nimport { EditInvoice } from '../pages/EditInvoice';\nimport { Invoices } from '../pages/Invoices';\nimport { RouteInterface } from '../types/route';\n\nconst routes: RouteInterface[] = [\n    {\n        url: '/',\n        component: Invoices,\n    },\n    {\n        url: '/invoice/add/',\n        component: AddInvoice,\n    },\n    {\n        url: '/invoice/edit/:id',\n        component: EditInvoice,\n    },\n    {\n        url: '/customer/add/',\n        component: AddCustomer,\n    },\n    {\n        url: '/invoices',\n        component: Invoices,\n    },\n];\n\nexport const Router = () => {\n    return (\n        <BrowserRouter>\n            <Routes>\n                {routes.map((route) => (\n                    <Route\n                        path={route.url}\n                        key={route.url}\n                        element={<route.component />}\n                    />\n                ))}\n            </Routes>\n        </BrowserRouter>\n    );\n};\n","import { InvoiceBody } from '../../components/InvoiceBody';\nimport { Container, Text } from '@mantine/core';\n\nexport const AddInvoice = () => {\n    return (\n        <Container size='sm'>\n            <Text component='h1' size='xl'>\n                NEW INVOICE\n            </Text>\n            <form>\n                <InvoiceBody />\n            </form>\n        </Container>\n    );\n};\n","import { InvoiceBody } from '../../components/InvoiceBody';\nimport { Container, Text } from '@mantine/core';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getInvoice } from '../../reducers/invoices';\nimport { getCustomer } from '../../reducers/customers';\n\nexport const EditInvoice = () => {\n    const { id } = useParams();\n    const invoice = useSelector(getInvoice(id as string));\n    const customer = useSelector(getCustomer(invoice?.customerId as string));\n\n    return (\n        <Container size='sm'>\n            <Text component='h1' size='xl'>\n                EDIT INVOICE\n            </Text>\n            <form>\n                <InvoiceBody {...{ invoice, customer }} />\n            </form>\n        </Container>\n    );\n};\n","import { Customer, States } from \"../../components/Customer\";\n\nexport const AddCustomer = () => {\n\treturn (\n\t\t<Customer state={States.Add} />\n\t);\n};\n","import { MantineThemeOverride } from '@mantine/core';\n\nexport const theme: MantineThemeOverride = {\n    fontFamily: 'Nunito',\n    fontSizes: {\n        xl: 36,\n    },\n};\n","import { Provider } from 'react-redux';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Store } from './store';\nimport { Router } from './routes';\nimport { AppShell, MantineProvider } from '@mantine/core';\nimport { NotificationsProvider } from '@mantine/notifications';\nimport { theme } from './theme';\n\ntype Props = {\n    store: Store;\n};\n\nexport const App = ({ store }: Props) => {\n    const persistor = persistStore(store);\n    return (\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <MantineProvider theme={theme}>\n                    <NotificationsProvider position='top-right'>\n                        <AppShell padding='md'>\n                            <Router />\n                        </AppShell>\n                    </NotificationsProvider>\n                </MantineProvider>\n            </PersistGate>\n        </Provider>\n    );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore, Middleware, Action } from '@reduxjs/toolkit';\nimport { createHashHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddlware, { ThunkAction } from 'redux-thunk';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n// eslint-disable-next-line import/no-cycle\nimport { createRootReducer } from './rootReducer';\n\nexport const history = createHashHistory();\nconst rootReducer = createRootReducer();\nexport type RootState = ReturnType<typeof rootReducer>;\nconst middleware: Middleware[] = [thunkMiddlware];\n\nconst excludeLoggerEnvs = ['test', 'production'];\nconst shouldIncludeLogger = !excludeLoggerEnvs.includes(\n    process.env.NODE_ENV || ''\n);\n\nif (shouldIncludeLogger) {\n    const logger = createLogger({\n        level: 'info',\n        collapsed: true,\n    });\n    middleware.push(logger);\n}\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const configuredStore = (initialState?: RootState) => {\n    // Create Store\n    const store = configureStore({\n        reducer: persistedReducer,\n        middleware,\n        preloadedState: initialState,\n    });\n    return store;\n};\nexport type Store = ReturnType<typeof configuredStore>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","import { combineReducers } from 'redux';\n// eslint-disable-next-line import/no-cycle\nimport customerReducer from './reducers/customers';\nimport invoiceReducer from './reducers/invoices';\n\nexport const createRootReducer = () => {\n    return combineReducers({\n        customers: customerReducer,\n        invoices: invoiceReducer,\n    });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/index.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { configuredStore } from './store';\n\nconst store = configuredStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <App store={store} />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}